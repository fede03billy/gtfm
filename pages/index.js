import Head from 'next/head';
// import styles from '../styles/Home.module.css'; // to be removed and substituted with tailwind
import Categories from '../components/categories';
import FoodList from '../components/foodList';
import Link from 'next/link';
import { useCart } from '../components/cartContext';
import Error from 'next/error';

export default function Home(props) {
  const { restaurantInfo, restaurant_id, table_id, food } = props;
  const { cart } = useCart();
  const orderLink = `/order?resid=${restaurant_id}&tabid=${table_id}`;

  // in this part of the code the category provider is not initialized yet,
  // so we cannot use the context, the category is initialized in the FoodList component

  // check if there are no restaurant_id and table_if, in that case we will show a 404 page
  if (!restaurant_id || !table_id) {
    return <Error statusCode={404} />;
  }

  return (
    <div className="flex justify-center">
      <div className="mainContainer flex flex-col p-4 h-screen w-screen max-w-xl bg-amber-50 font-serif">
        <Head>
          <title>GTFM</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="flex flex-col align-top content-center">
          <div className="flex justify-between text-4xl font-bold mb-4 px-4">
            <div>{`${restaurantInfo.name}`}</div>
            <div className="font-medium text-lg">{`${table_id}`}</div>
          </div>
          <Categories food={food} />
          <FoodList food={food} />
        </main>
        <footer className="mt-auto w-full pb-4 flex flex-col">
          {/* button to redirect to /order */}
          <Link href={orderLink}>
            <button
              className="bg-amber-200 py-2 px-4 rounded hover:bg-amber-300 w-full"
              onClick={() => {
                // save the cart in the session storage
                if (typeof window !== 'undefined') {
                  sessionStorage.setItem('cart', JSON.stringify(cart));
                }
              }}
            >
              Order
            </button>
          </Link>
        </footer>
      </div>
    </div>
  );
}

// We need a function to get the query parameter from the url and to retrieve the data from the API
export async function getServerSideProps(context) {
  // Get the params from the url
  const { query } = context;
  let restaurant_id = query.resid;
  let table_id = query.tabid;

  if (!restaurant_id || !table_id) {
    restaurant_id = null;
    table_id = null;
  }

  // Get the data from the API
  const res = await fetch(
    `${process.env.BASE_URL}/api/restaurant/${restaurant_id}`
  ).then((res) => res.json());

  // Get the restaurant info from the API
  const restaurantInfo = await fetch(
    `${process.env.BASE_URL}/api/restaurant/info/${restaurant_id}`
  ).then((res) => res.json());

  // Return the data as props
  return {
    props: {
      restaurantInfo,
      restaurant_id, // TODO: avoid passing this data cause it is already in the restaurantInfo object
      table_id,
      food: res,
    },
  };
}
